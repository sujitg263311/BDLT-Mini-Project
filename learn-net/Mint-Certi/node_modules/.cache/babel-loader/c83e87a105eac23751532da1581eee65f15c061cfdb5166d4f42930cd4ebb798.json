{"ast":null,"code":"import axios from \"axios\";\nconst pinataApiKey = \"760746f0cbd3be4d8855\";\nconst pinataApiSecret = \"1027eff8032f808c3c70b7d468aa373c57877834bec400d140da48e7645d2ce5\";\nconst pinataApiUrl = \"https://api.pinata.cloud/pinning/pinFileToIPFS\";\nconst pinataHeaders = {\n  headers: {\n    \"Content-Type\": \"multipart/form-data\",\n    pinata_api_key: pinataApiKey,\n    pinata_secret_api_key: pinataApiSecret\n  }\n};\nexport async function uploadToIPFS(file) {\n  const formData = new FormData();\n  // formData.append(\"file\", file);\n  const response = await axios.get('/certificate.jpeg', {\n    responseType: 'blob'\n  });\n  console.log(\"file\", file);\n  // Create a File object from the blob\n  const file1 = new File([response.data], 'certificate.jpeg', {\n    type: 'image/jpeg'\n  });\n  formData.append(\"file\", file1);\n  try {\n    const response = await axios.post(pinataApiUrl, formData, pinataHeaders);\n    const ipfsHash = response.data.IpfsHash;\n    return `https://gateway.pinata.cloud/ipfs/${ipfsHash}`;\n  } catch (error) {\n    console.error(\"Error uploading file to Pinata:\", error);\n    throw error;\n  }\n}","map":{"version":3,"names":["axios","pinataApiKey","pinataApiSecret","pinataApiUrl","pinataHeaders","headers","pinata_api_key","pinata_secret_api_key","uploadToIPFS","file","formData","FormData","response","get","responseType","console","log","file1","File","data","type","append","post","ipfsHash","IpfsHash","error"],"sources":["/Users/sarveshpatil/Desktop/Sarvesh/Code/WebProjects/learn-net/Mint-Certi/src/ipfsUploader.js"],"sourcesContent":["import axios from \"axios\";\nconst pinataApiKey = \"760746f0cbd3be4d8855\";\nconst pinataApiSecret = \"1027eff8032f808c3c70b7d468aa373c57877834bec400d140da48e7645d2ce5\";\n\nconst pinataApiUrl = \"https://api.pinata.cloud/pinning/pinFileToIPFS\";\n\nconst pinataHeaders = {\n  headers: {\n    \"Content-Type\": \"multipart/form-data\",\n    pinata_api_key: pinataApiKey,\n    pinata_secret_api_key: pinataApiSecret,\n  },\n};\n\nexport async function uploadToIPFS(file) {\n  const formData = new FormData();\n  // formData.append(\"file\", file);\n  const response = await axios.get('/certificate.jpeg', { responseType: 'blob' });\n  console.log(\"file\",file)  \n    // Create a File object from the blob\n  const file1 = new File([response.data], 'certificate.jpeg', { type: 'image/jpeg' });\n  formData.append(\"file\", file1);\n  try {\n    const response = await axios.post(pinataApiUrl, formData, pinataHeaders);\n    const ipfsHash = response.data.IpfsHash;\n    return `https://gateway.pinata.cloud/ipfs/${ipfsHash}`;\n  } catch (error) {\n    console.error(\"Error uploading file to Pinata:\", error);\n    throw error;\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,YAAY,GAAG,sBAAsB;AAC3C,MAAMC,eAAe,GAAG,kEAAkE;AAE1F,MAAMC,YAAY,GAAG,gDAAgD;AAErE,MAAMC,aAAa,GAAG;EACpBC,OAAO,EAAE;IACP,cAAc,EAAE,qBAAqB;IACrCC,cAAc,EAAEL,YAAY;IAC5BM,qBAAqB,EAAEL;EACzB;AACF,CAAC;AAED,OAAO,eAAeM,YAAYA,CAACC,IAAI,EAAE;EACvC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC/B;EACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,mBAAmB,EAAE;IAAEC,YAAY,EAAE;EAAO,CAAC,CAAC;EAC/EC,OAAO,CAACC,GAAG,CAAC,MAAM,EAACP,IAAI,CAAC;EACtB;EACF,MAAMQ,KAAK,GAAG,IAAIC,IAAI,CAAC,CAACN,QAAQ,CAACO,IAAI,CAAC,EAAE,kBAAkB,EAAE;IAAEC,IAAI,EAAE;EAAa,CAAC,CAAC;EACnFV,QAAQ,CAACW,MAAM,CAAC,MAAM,EAAEJ,KAAK,CAAC;EAC9B,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMZ,KAAK,CAACsB,IAAI,CAACnB,YAAY,EAAEO,QAAQ,EAAEN,aAAa,CAAC;IACxE,MAAMmB,QAAQ,GAAGX,QAAQ,CAACO,IAAI,CAACK,QAAQ;IACvC,OAAQ,qCAAoCD,QAAS,EAAC;EACxD,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdV,OAAO,CAACU,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK;EACb;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}